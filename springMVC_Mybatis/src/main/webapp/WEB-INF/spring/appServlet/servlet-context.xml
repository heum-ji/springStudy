<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- DB 접속정보를 저장하는 dataSource객체 생성 -->
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<beans:property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe"/>
		<beans:property name="username" value="mybatis"/>
		<beans:property name="password" value="1234"/>
	</beans:bean>
	
	<!-- Mybatis 설정 -->
	<!-- SqlSessionFactoryBean 설정 : 접속 정보 + config 경로 설정 -->
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="configLocation" value="classpath:mybatis-config.xml"/>
		<beans:property name="mapperLocations" value="classpath:/mapper/*mapper.xml"/>
	</beans:bean>
	
	<!-- SqlSessionTemplate 생성 -->
	<beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSession"></beans:constructor-arg>
	</beans:bean>
	
	<beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>

	<!-- 파일 업로드 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 첨부파일 총 용량  10Mb제한 -->
		<beans:property name="maxUploadSize" value="10485760" />
	</beans:bean>
	
	<!-- 트랜잭션 관리용 객체 / id는 spring에서 정해진 값 자동 check -->
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
	<!-- AOP 테스트 -->
	<!-- Before -->
	<!-- <beans:bean id="beforeAdvice" class="kr.or.common.BeforeAdvice"></beans:bean> -->
	<!-- AfterReturning -->
	<!-- <beans:bean id="after1" class="kr.or.common.AfterReturningAdvice"></beans:bean> -->
	<!-- AfterThrowing -->
	<!-- <beans:bean id="after2" class="kr.or.common.AfterThrowingAdvice"></beans:bean> -->
	<!-- Around -->
	<!-- <beans:bean id="around" class="kr.or.common.AroundAdvice"></beans:bean> -->
	
	<!-- <aop:config>
		<aop:pointcut expression="execution(* kr.or.member.model.service..*Service.*(*,..))" id="allPointcut"/>
		<aop:aspect ref="around">
			<aop:around method="arounLog" pointcut-ref="allPointcut"/>
		</aop:aspect>
	</aop:config> -->
	
	<!-- AOP 어노테이션방식 사용 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<!-- 트랜잭션 어노테이션 사용 -->
	<tx:annotation-driven/>
	<!-- 스케쥴링 어노테이션 사용 -->
	<task:annotation-driven/>
	<!-- 웹 소켓 전체채팅용 설정 -->
	<beans:bean id="allMemberChat" class="kr.or.member.model.service.AllMemberChat"/>
	<websocket:handlers>
		<websocket:mapping handler="allMemberChat" path="/chat.do"/>
	</websocket:handlers>
	
	<context:component-scan base-package="kr.or.iei" />
	<context:component-scan base-package="kr.or.member" />
	<context:component-scan base-package="kr.or.notice" />
	<context:component-scan base-package="kr.or.board" />
	<context:component-scan base-package="kr.or.common" />
	<context:component-scan base-package="kr.or.coupon" />
	
</beans:beans>
